FROM ros:humble-ros-base-jammy

# Tell apt (and other Debian tools) not to prompt for user input during package installs
ENV DEBIAN_FRONTEND=noninteractive

# Set ROS_DOMAIN_ID to isolate ROS 2
ENV ROS_DOMAIN_ID=1

# Create folders
RUN mkdir -p /git/
RUN mkdir -p /ros2_ws/src

# Update the package list and install basic dependencies
RUN apt update
RUN apt upgrade -y
RUN apt install -y \
    wget gosu htop ruby tmux net-tools iproute2 python3-pip
RUN gem install tmuxinator

# Build PX4 messages (do it early to save time when rebuilding the image)
WORKDIR /ros2_ws/src
RUN git clone -b release/1.15 https://github.com/PX4/px4_msgs.git
WORKDIR /ros2_ws
RUN rosdep update
RUN rosdep install --from-paths src --ignore-src --rosdistro humble -y
RUN bash -c "source /opt/ros/humble/setup.bash && colcon build --symlink-install"
WORKDIR /

# XRCE-DDS (do it early to save time when rebuilding the image)
# Based on https://micro-xrce-dds.docs.eprosima.com/en/latest/installation.html#installing-the-agent-standalone
RUN git clone https://github.com/eProsima/Micro-XRCE-DDS-Agent.git /git/Micro-XRCE-DDS-Agent
WORKDIR /git/Micro-XRCE-DDS-Agent
RUN mkdir build && cd build && \
    cmake .. && \
    make && \
    make install && \
    ldconfig
# run with $ MicroXRCEAgent udp4 -p 8888

# pymavlink
RUN pip3 install --upgrade pip
RUN pip3 install pymavlink
# check with $ python3 -c "import pymavlink; print(pymavlink.__version__)"

# MAVSDK
# Based on https://mavsdk.mavlink.io/main/en/cpp/guide/installation.html
WORKDIR /
RUN wget https://github.com/mavlink/MAVSDK/releases/download/v3.6.0/libmavsdk-dev_3.6.0_ubuntu22.04_amd64.deb
RUN dpkg -i /libmavsdk-dev_3.6.0_ubuntu22.04_amd64.deb
# check with $ pkg-config --modversion mavsdk

# TODO

# YOLOv8
# See also https://github.com/ultralytics/ultralytics/blob/main/examples/YOLOv8-ONNXRuntime-CPP/README.md
# 
# RUN apt update
# RUN apt install -y \
#     onnxruntime-dev libopencv-dev
# 
# RUN pip3 install ultralytics # THIS CONFLICTS WITH THE BUILD OF PX4 MESSAGES

# Copy resources from this repository
COPY simulation_resources/ /git/simulation_resources

# Build ROS 2 workspace
WORKDIR /ros2_ws
RUN rosdep update
RUN rosdep install --from-paths src --ignore-src --rosdistro humble -y
RUN bash -c "source /opt/ros/humble/setup.bash && colcon build --symlink-install"
# source /opt/ros/humble/setup.bash && source /ros2_ws/install/setup.bash

# Final config
WORKDIR /
ENTRYPOINT ["/ros_entrypoint.sh"]
