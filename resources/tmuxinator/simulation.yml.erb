<% drone_type = ENV.fetch('DRONE_TYPE', 'quad') %>
<% autopilot = ENV.fetch('AUTOPILOT', 'px4') %>
<% num_drones = ENV.fetch('NUM_DRONES', 1).to_i %>

name: simulation_tmuxinator

windows:

  <% if autopilot == 'px4' %>
  - px4_gz_sim:
      layout: even-horizontal
      panes:
        - >
          GZ_SIM_RESOURCE_PATH=$GZ_SIM_RESOURCE_PATH:/git/PX4-Autopilot/Tools/simulation/gz/models:/git/PX4-Autopilot/Tools/simulation/gz/worlds
          gz sim -v4 -r default.sdf
        - "ros2 run ros_gz_bridge parameter_bridge /clock@rosgraph_msgs/msg/Clock[gz.msgs.Clock"
  <% num_drones.times do |i| %>
  - px4_sitl_<%= i + 1 %>:
      layout: even-horizontal
      panes:
        - >
          sleep <%= (i + 1) * 3 %> &&
          PX4_GZ_MODEL_POSE="<%= i * 2 %>,<%= i * 2 %>,0,0,0,0"
          PX4_SYS_AUTOSTART=<%= drone_type == 'quad' ? '4001' : '4004' %>
          PX4_UXRCE_DDS_NS="Drone<%= i + 1 %>"
          PX4_UXRCE_DDS_PORT=<%= 8888 + i %>
          /git/PX4-Autopilot/build/px4_sitl_default/bin/px4 -i <%= i + 1 %>
  <% end %>

  <% elsif autopilot == 'ardupilot' %>
  - ardupilot_gz_sim:
      layout: even-horizontal
      panes:
        - > 
          GZ_SIM_SYSTEM_PLUGIN_PATH=/git/ardupilot_gazebo/build:$GZ_SIM_SYSTEM_PLUGIN_PATH 
          GZ_SIM_RESOURCE_PATH=/git/ardupilot_gazebo/models:/git/ardupilot_gazebo/worlds:$GZ_SIM_RESOURCE_PATH 
          gz sim -v4 -r <%= drone_type == 'quad' ? 'iris_runway.sdf' : 'zephyr_runway.sdf' %>
        - "ros2 run ros_gz_bridge parameter_bridge /clock@rosgraph_msgs/msg/Clock[gz.msgs.Clock"
  <% num_drones.times do |i| %>
  - ardupilot_sitl_<%= i + 1 %>:
      layout: even-horizontal
      panes:
        - /git/ardupilot/Tools/autotest/sim_vehicle.py -v <%= drone_type == 'quad' ? 'ArduCopter' : 'ArduPlane' %> -I <%= i %> -f <%= drone_type == 'quad' ? 'gazebo-iris' : 'gazebo-zephyr' %> --model JSON
  <% end %>
  <% end %>

  - housekeeping:
      layout: even-horizontal
      panes:
        - # Interactive pane
        - htop
        - "ip a && ss -tuln && echo $ROS_DISTRO && echo $ROS_DOMAIN_ID"
        - "gosu qgcuser /squashfs-root/AppRun"
